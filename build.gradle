plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.2.0"
    id("com.google.protobuf") version "0.9.2"
    id("io.micronaut.test-resources") version "4.2.0"
    id("io.micronaut.aot") version "4.0.3"

}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}
dependencies {

    implementation 'io.micronaut:micronaut-inject'
    // https://mvnrepository.com/artifact/io.micronaut/micronaut-aop
    implementation 'io.micronaut:micronaut-aop'

    // Micronaut Validation : Micronaut validation support.
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")

    // Micronaut Validation : Micronaut validation support.
    implementation("io.micronaut.validation:micronaut-validation")

    // Micronaut Data and JPA Dependencies
    implementation 'jakarta.persistence:jakarta.persistence-api:3.2.0-M1'
    implementation "io.micronaut.data:micronaut-data-jpa"
    implementation group: 'io.micronaut.data', name: 'micronaut-data-hibernate-jpa', version: '4.1.3'

    // Security and Authentication Dependencies
    annotationProcessor("io.micronaut.security:micronaut-security-annotations") //    Micronaut Security Annotations
    implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'      // jBCrypt : Library for handling bcrypt password hashing
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1' // JWT (JSON Web Token): Implementation for creating and parsing JWTs.
    implementation("io.micronaut.security:micronaut-security-jwt")        //    Micronaut Security JWT: Micronaut module for JWT-based authentication and authorization.

    // Serde and Serialization Dependencies
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.serde:micronaut-serde-jackson")

    // Other Micronaut Dependencies
    implementation("io.micronaut:micronaut-discovery-core") //    Micronaut Discovery Core : Micronaut core library for service discovery.
    implementation("io.micronaut.grpc:micronaut-grpc-runtime")

    // Additional Dependencies
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1' //    JAXB API: Java Architecture for XML Binding API.
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")               //    Micronaut SQL with Hibernate JPA
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")               //    Micronaut SQL with JDBC Hikari: : Micronaut support for SQL with Hikari as the JDBC connection pool.
    implementation("javax.annotation:javax.annotation-api")              //    javax.annotation API: Java EE annotation API.

    // Jakarta Persistence API
    compileOnly("jakarta.persistence:jakarta.persistence-api:2.2.2")

    // Lombok for Annotation Processing
    annotationProcessor("org.projectlombok:lombok")
    compileOnly("org.projectlombok:lombok")

    // Runtime-Only Dependencies
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.postgresql:postgresql")  //    PostgreSQL Driver
    runtimeOnly("org.yaml:snakeyaml")       //    SnakeYAML: YAML parsing library for Java.
}


application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
sourceSets {
    main {
        java {
            srcDirs("build/generated/source/proto/main/grpc")
            srcDirs("build/generated/source/proto/main/java")
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:3.25.1" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.59.1" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
    testResources {
        additionalModules.add("jdbc-postgresql")
    }

aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
    optimizeServiceLoading = false
    convertYamlToJava = false
    precomputeOperations = true
    cacheEnvironment = true
    optimizeClassLoading = true
    deduceEnvironment = true
    optimizeNetty = true
}

}


